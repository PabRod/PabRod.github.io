<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PabRod - math</title><link href="https://pabrod.github.io/" rel="alternate"></link><link href="https://pabrod.github.io/feeds/tag-math.atom.xml" rel="self"></link><id>https://pabrod.github.io/</id><updated>2019-12-08T16:37:24+01:00</updated><subtitle>Applied mathematician. Science storyteller</subtitle><entry><title>Visualization of a 3D Levi-Civita symbol</title><link href="https://pabrod.github.io/levi-civita-en.html" rel="alternate"></link><published>2019-12-08T16:37:24+01:00</published><updated>2019-12-08T16:37:24+01:00</updated><author><name>Pablo Rodríguez-Sánchez</name></author><id>tag:pabrod.github.io,2019-12-08:/levi-civita-en.html</id><summary type="html">&lt;p&gt;Simple way of visualizing the structure of the Levi-Civita symbol&lt;/p&gt;</summary><content type="html">&lt;script type="text/x-mathjax-config"&gt;
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      processEscapes: true
    }
  });
&lt;/script&gt;

&lt;script type="text/javascript"
    src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Levi-Civita_symbol"&gt;Levi-Civita symbol&lt;/a&gt; is that puzzling $\epsilon_{ijk}$ term that appears in the calculation of determinants and vector products. It has, thus, lots of applications in algebra, geometry, mechanics, electromagnetism, ... A (boring) definition is given in the textbox below.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The value of $\epsilon_{ijk}$ goes as follows:&lt;/p&gt;
&lt;p&gt;It is $0$ if the value of &lt;strong&gt;any&lt;/strong&gt; index is repeated, such as in $ijk = 112$&lt;/p&gt;
&lt;p&gt;It is $1$ if the indices are $ijk \in123, 312, 231$&lt;/p&gt;
&lt;p&gt;It is $-1$ if the indices are $ijk \in 321, 132, 213$&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I am interested in visualization. Unfortunately, the Levi-Civita symbol has three indices, $i$, $j$ and $k$, so we cannot represent it as a matrix or a vector. But, taking advantage of its discrete nature (it can only take 3 different values) we can create a "cubic matrix" to visualize it. This matrix contains $3 \times 3 \times 3$ cubes, each of them univocally identified by a triplet $ijk$, and the color tells us its value (grey for $0$, green for $1$, red for $-1$).&lt;/p&gt;
&lt;p&gt;That's what I did in a GeoGebra applet. I leave it here, just in case anyone finds it interesting. Click on the image to open an interactive version where the cube can be rotated.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.geogebra.org/m/fbtgkakj"&gt;&lt;img alt="Levi-Civita" src="images/2019-12/LeviCivita.png"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Blog"></category><category term="math"></category><category term="GeoGebra"></category></entry><entry><title>Python or R? Why not both?</title><link href="https://pabrod.github.io/PyR-en.html" rel="alternate"></link><published>2019-03-22T10:50:31+01:00</published><updated>2019-03-22T10:50:31+01:00</updated><author><name>Pablo Rodríguez-Sánchez</name></author><id>tag:pabrod.github.io,2019-03-22:/PyR-en.html</id><summary type="html">&lt;p&gt;How to use Python code inside R&lt;/p&gt;</summary><content type="html">&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async&gt;&lt;/script&gt;

&lt;p&gt;&lt;em&gt;Python&lt;/em&gt; and &lt;em&gt;R&lt;/em&gt;. They are two of the most popular programming languages
for science. They are both free, both of them have a strong user
community and both of them work pretty well.&lt;/p&gt;
&lt;p&gt;Personally, I find &lt;em&gt;Python&lt;/em&gt; way more intuitive than &lt;em&gt;R&lt;/em&gt; (at least for
people who, like me, have a classical mathematics background). Thinking
in terms of data frames is great when you work with statistical data,
but it gets a bit annoying when you are more interested in analysis. To
uneven the score even more, &lt;em&gt;Python's&lt;/em&gt; libraries like &lt;em&gt;NumPy&lt;/em&gt;, &lt;em&gt;SciPy&lt;/em&gt;,
&lt;em&gt;SimPy&lt;/em&gt; and &lt;em&gt;Matplotlib&lt;/em&gt; are the perfect toolbox for anyone doing
mathematical research of any kind.&lt;/p&gt;
&lt;p&gt;But... I chose &lt;em&gt;R&lt;/em&gt;. Why?&lt;/p&gt;
&lt;p&gt;There is only one reason for doing so: &lt;em&gt;knitr&lt;/em&gt;[1]. &lt;em&gt;knitr&lt;/em&gt; is a package
that turns a combination of text &lt;strong&gt;and code&lt;/strong&gt; (the &lt;em&gt;RMarkdown&lt;/em&gt; file)
into almost any format of human readable text, including a &lt;em&gt;pdf&lt;/em&gt; report,
slides, or a blog page like &lt;a href="https://github.com/PabRod/pabrod.github.io-src/blob/master/auxs/Rmd/2019-03-22%20PyR.Rmd"&gt;the one you are reading now&lt;/a&gt;. The interesting
point is the integration of the code with the text. This means that an
&lt;em&gt;RMarkdown&lt;/em&gt; document is not passive. This allows one to write papers
that, quite literally, recalculate themselves any time needed. &lt;em&gt;knitr&lt;/em&gt;,
combined with research code structured as an &lt;em&gt;R&lt;/em&gt; package, is clearly my
favourite way of writing research. The package structure keeps my code
tidy and tested, and &lt;em&gt;knitr&lt;/em&gt; allows me to do all and the figures the
writing in a single file. The result is a rock-solid, reproducible
output. Let me put it like this: &lt;em&gt;knitr&lt;/em&gt; is like &lt;em&gt;LaTeX&lt;/em&gt; on steroids![2]&lt;/p&gt;
&lt;p&gt;But... I keep finding &lt;em&gt;R&lt;/em&gt; annoying. A few days ago, after looking for
hours for a nice way of ploting phase planes, I gave up. All the
possibilities I found were terribly ugly. I had to go back to &lt;em&gt;Python's&lt;/em&gt;
&lt;em&gt;Matplotlib&lt;/em&gt; and its function &lt;em&gt;streamplot&lt;/em&gt;. See for yourself:&lt;/p&gt;
&lt;p&gt;With &lt;em&gt;R&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="with-r" src="images/2019-03/phase-plot-1.png"&gt;&lt;/p&gt;
&lt;p&gt;With &lt;em&gt;Python&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="with-py" src="images/2019-03/phase-plotPy-1.png"&gt;&lt;/p&gt;
&lt;p&gt;After a bit of googling, I found an &lt;em&gt;R&lt;/em&gt; library called &lt;em&gt;reticulate&lt;/em&gt; that
allows to run &lt;em&gt;Python&lt;/em&gt; code from inside &lt;em&gt;R&lt;/em&gt;. If this works (I thought) I
can keep the best of both approaches! And, so far, it works flawlessly!&lt;/p&gt;
&lt;h2&gt;How to do it&lt;/h2&gt;
&lt;p&gt;First of all, &lt;em&gt;R&lt;/em&gt; and &lt;em&gt;Python&lt;/em&gt; are obviously reequired. &lt;em&gt;reticulate&lt;/em&gt; can
be installed and loaded as usual in &lt;em&gt;R&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;reticulate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reticulate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For &lt;a href="https://community.rstudio.com/t/matplotlib-inline-plots-with-reticulate-on-rstudio-server/16357"&gt;some
reason&lt;/a&gt;
I still don't fully understand, I had to add these two lines to make
&lt;em&gt;Matplotlib&lt;/em&gt; work properly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;matplotlib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;convert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nf"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Agg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we can insert python chunks in &lt;em&gt;Rmarkdown&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kp"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;

&lt;span class="c1"&gt;## 0.707106781187&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Interaction&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;reticulate&lt;/em&gt; works creating two different sessions, one of &lt;em&gt;R&lt;/em&gt; and
another of &lt;em&gt;Python&lt;/em&gt;. In order to unleash all the power of this
combination, we need a way of passing variables between both sessions.
This is done via the dataframe &lt;code&gt;py&lt;/code&gt;. See examples below:&lt;/p&gt;
&lt;h3&gt;From &lt;em&gt;R&lt;/em&gt; to &lt;em&gt;Python&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Create a variable and store it as a field of &lt;code&gt;py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;```{r}&lt;/span&gt;
&lt;span class="n"&gt;py$foo &amp;lt;- &amp;quot;Hi!&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;```&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The variable will be available in the &lt;em&gt;Python&lt;/em&gt; session:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;```&lt;/span&gt;

&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;Hi&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;From &lt;em&gt;Python&lt;/em&gt; to &lt;em&gt;R&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Create a variable inside the &lt;em&gt;Python&lt;/em&gt; session:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;How are you?&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;```&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The variable will be available as a field of the dataframe &lt;code&gt;py&lt;/code&gt; in the
&lt;em&gt;R&lt;/em&gt; session:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;py$bar&lt;/span&gt;
&lt;span class="o"&gt;```&lt;/span&gt;

&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;How are you?&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This entry appears in &lt;a href="https://www.r-bloggers.com"&gt;R-bloggers.com&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;[1] Actually, there is a second (and less important) reason: &lt;em&gt;Shiny&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;[2] It is true that &lt;em&gt;Python&lt;/em&gt; also has &lt;em&gt;Jupyter&lt;/em&gt; for reproducible
research, but the results are just not as neat as with &lt;em&gt;R&lt;/em&gt;.&lt;/p&gt;</content><category term="Blog"></category><category term="math"></category><category term="R"></category><category term="Python"></category></entry><entry><title>Animations in R</title><link href="https://pabrod.github.io/animations-r-en.html" rel="alternate"></link><published>2018-12-02T14:22:33+01:00</published><updated>2018-12-02T14:22:33+01:00</updated><author><name>Pablo Rodríguez-Sánchez</name></author><id>tag:pabrod.github.io,2018-12-02:/animations-r-en.html</id><summary type="html">&lt;p&gt;How to make animations in R using ggplot2 and gganimate&lt;/p&gt;</summary><content type="html">&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async&gt;&lt;/script&gt;

&lt;p&gt;I've recently discovered the package &lt;em&gt;gganimate&lt;/em&gt; thanks to this
&lt;a href="http://blog.schochastics.net/post/beautiful-chaos-the-double-pendulum/"&gt;brilliant
example&lt;/a&gt;.
I've been playing with the package during this weekend, and I created
some examples that I spread through
&lt;a href="https://twitter.com/DonMostrenco/status/1068791278173908992"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some Twitter users showed interest in knowing more. I hope this short
tutorial can satisfy them.&lt;/p&gt;
&lt;h2&gt;Libraries used&lt;/h2&gt;
&lt;p&gt;We're going to need the following libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    # &lt;span class="nv"&gt;Numerical&lt;/span&gt;
    &lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;pracma&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="nv"&gt;To&lt;/span&gt; &lt;span class="nv"&gt;calculate&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;Taylor&lt;/span&gt; &lt;span class="nv"&gt;polynomials&lt;/span&gt;
    &lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;reshape&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;melt&lt;/span&gt;

    # &lt;span class="nv"&gt;Display&lt;/span&gt;
    &lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ggplot2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nv"&gt;plotting&lt;/span&gt;
    &lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ggthemes&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="nv"&gt;Also&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;plotting&lt;/span&gt;
    &lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;gganimate&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nv"&gt;animating&lt;/span&gt;. &lt;span class="nv"&gt;Install&lt;/span&gt; &lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;devtools&lt;/span&gt;::&lt;span class="nv"&gt;install_github&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;thomasp85/gganimate&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kableExtra&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="nv"&gt;To&lt;/span&gt; &lt;span class="nv"&gt;display&lt;/span&gt; &lt;span class="nv"&gt;nice&lt;/span&gt; &lt;span class="nv"&gt;tables&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Animating a moving particle&lt;/h2&gt;
&lt;p&gt;Here we'll generate a moving particle. First, we need the positions in
time. In our case, the dynamical equations will be given by:&lt;/p&gt;
&lt;p&gt;$$ \begin{cases} x(t) = cos(t) \\ y(t) = sin(2t) \end{cases}$$&lt;/p&gt;
&lt;p&gt;So we generate the series and store them in a dataframe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="kc"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length.out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xs&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ys&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;particle&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code for generating the animation follows a very similar syntax to
&lt;em&gt;ggplot&lt;/em&gt;. In this case, we indicate that the values of &lt;em&gt;ts&lt;/em&gt; should be
used as the transition time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;particle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
      &lt;span class="n"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ys&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Generate&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
      &lt;span class="n"&gt;theme_tufte&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;labs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;scale_y_continuous&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;limits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;look&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;guides&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;pretty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
      &lt;span class="n"&gt;transition_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;And&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
      &lt;span class="n"&gt;ease_aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="a" src="images/2018-12/Movement-1.gif"&gt;&lt;/p&gt;
&lt;h2&gt;Animating a Taylor series&lt;/h2&gt;
&lt;p&gt;Let's see now a more complex example. Our purpose is to explore Taylor
polynomials of different degrees approximating the function&lt;/p&gt;
&lt;p&gt;$$f(x) = cos(\frac{3x}{2}) e^{-x} $$&lt;/p&gt;
&lt;p&gt;around a given point.&lt;/p&gt;
&lt;p&gt;Thus, we begin creating the function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nf"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this case, we want to compare how good is the performance of Taylor
polynomials of different orders. The data we have to generate is a bit
more complex than before.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nv"&gt;xs&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;, &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;pi&lt;/span&gt;, &lt;span class="nv"&gt;length&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="nv"&gt;Values&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;
    &lt;span class="nv"&gt;x0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; # &lt;span class="nv"&gt;Value&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;where&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;Taylor&lt;/span&gt; &lt;span class="nv"&gt;series&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;centered&lt;/span&gt;
    &lt;span class="nv"&gt;ys&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;matrix&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="nv"&gt;nrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;xs&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;ncol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;:&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; { # &lt;span class="nv"&gt;Extract&lt;/span&gt; &lt;span class="nv"&gt;Taylor&lt;/span&gt; &lt;span class="nv"&gt;polynomials&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;orders&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
      &lt;span class="nv"&gt;order&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; # &lt;span class="nv"&gt;Indexes&lt;/span&gt; &lt;span class="nv"&gt;have&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;positive&lt;/span&gt;, &lt;span class="nv"&gt;but&lt;/span&gt; &lt;span class="nv"&gt;first&lt;/span&gt; &lt;span class="nv"&gt;order&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;order&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; { # &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="nv"&gt;Taylor&lt;/span&gt; &lt;span class="nv"&gt;polynomial&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;order&lt;/span&gt; &lt;span class="nv"&gt;zero&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;just&lt;/span&gt;...
        &lt;span class="nv"&gt;ys&lt;/span&gt;[,&lt;span class="nv"&gt;i&lt;/span&gt;] &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # ... &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;constant&lt;/span&gt; &lt;span class="nv"&gt;function&lt;/span&gt;
      } &lt;span class="k"&gt;else&lt;/span&gt; {
        &lt;span class="nv"&gt;taylor_coefs&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;taylor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;, &lt;span class="nv"&gt;x0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;x0&lt;/span&gt;, &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;order&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="nv"&gt;Get&lt;/span&gt; &lt;span class="nv"&gt;polynomial&lt;/span&gt;
        &lt;span class="nv"&gt;ys&lt;/span&gt;[,&lt;span class="nv"&gt;i&lt;/span&gt;] &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;polyval&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;taylor_coefs&lt;/span&gt;, &lt;span class="nv"&gt;xs&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; # &lt;span class="nv"&gt;Evaluate&lt;/span&gt; &lt;span class="nv"&gt;polynomial&lt;/span&gt;
      }
    }

    # &lt;span class="nv"&gt;Rewrite&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;dataframe&lt;/span&gt;
    &lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;.&lt;span class="nv"&gt;frame&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ys&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;colnames&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;melt&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;cbind&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;, &lt;span class="nv"&gt;xs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;rep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;xs&lt;/span&gt;,&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;xs&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
    &lt;span class="nv"&gt;colnames&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;order&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;ys&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;xs&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The resulting dataframe is a collection of polynomials of different
orders evaluated at each point in &lt;em&gt;xs&lt;/em&gt;. Additionally, we added the
values of the original function &lt;em&gt;f(x)&lt;/em&gt;, also at each point:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th align="left"&gt;order&lt;/th&gt;
&lt;th align="right"&gt;ys&lt;/th&gt;
&lt;th align="right"&gt;xs&lt;/th&gt;
&lt;th align="right"&gt;f&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;0&lt;/td&gt;
&lt;td align="right"&gt;0.0260228&lt;/td&gt;
&lt;td align="right"&gt;-2.000000&lt;/td&gt;
&lt;td align="right"&gt;-7.315110&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;0&lt;/td&gt;
&lt;td align="right"&gt;0.0260228&lt;/td&gt;
&lt;td align="right"&gt;-1.994474&lt;/td&gt;
&lt;td align="right"&gt;-7.265955&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;0&lt;/td&gt;
&lt;td align="right"&gt;0.0260228&lt;/td&gt;
&lt;td align="right"&gt;-1.988948&lt;/td&gt;
&lt;td align="right"&gt;-7.216622&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;0&lt;/td&gt;
&lt;td align="right"&gt;0.0260228&lt;/td&gt;
&lt;td align="right"&gt;-1.983423&lt;/td&gt;
&lt;td align="right"&gt;-7.167120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;0&lt;/td&gt;
&lt;td align="right"&gt;0.0260228&lt;/td&gt;
&lt;td align="right"&gt;-1.977897&lt;/td&gt;
&lt;td align="right"&gt;-7.117454&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;0&lt;/td&gt;
&lt;td align="right"&gt;0.0260228&lt;/td&gt;
&lt;td align="right"&gt;-1.972371&lt;/td&gt;
&lt;td align="right"&gt;-7.067632&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A static plot will look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
      &lt;span class="n"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Generate&lt;/span&gt; &lt;span class="n"&gt;basic&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
      &lt;span class="n"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Plot&lt;/span&gt; &lt;span class="n"&gt;also&lt;/span&gt; &lt;span class="n"&gt;original&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;
      &lt;span class="n"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Remark&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt;
      &lt;span class="n"&gt;theme_tufte&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;labs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;look&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;scale_y_continuous&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;limits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;pretty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="a" src="images/2018-12/Plot-static-1.png"&gt;&lt;/p&gt;
&lt;p&gt;In order to animate it, now we will use the command
&lt;em&gt;transition_states&lt;/em&gt;, using &lt;em&gt;order&lt;/em&gt; (the order of the Taylor polynomial)
as the animation parameter. The parameters &lt;em&gt;transition_length&lt;/em&gt; and
&lt;em&gt;state_length&lt;/em&gt; control how much time each state stays in screen, and
how long the transition between states should look.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
      &lt;span class="n"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ys&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;Add&lt;/span&gt; &lt;span class="n"&gt;basic&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
      &lt;span class="n"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Plot&lt;/span&gt; &lt;span class="n"&gt;also&lt;/span&gt; &lt;span class="n"&gt;original&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;
      &lt;span class="n"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Remark&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt;
      &lt;span class="n"&gt;theme_tufte&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;labs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;scale_y_continuous&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;limits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;look&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="n"&gt;guides&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;pretty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
      &lt;span class="n"&gt;transition_states&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transition_length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state_length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;And&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
      &lt;span class="n"&gt;ease_aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="a" src="images/2018-12/Plot-animated-1.gif"&gt;&lt;/p&gt;
&lt;p&gt;The result could not look nicer!&lt;/p&gt;
&lt;p&gt;This entry appears in &lt;a href="https://www.r-bloggers.com"&gt;R-bloggers.com&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;PS: If you liked this post, &lt;a href="https://www.geogebra.org/m/CeW2gCzH"&gt;this
visualization&lt;/a&gt; I made in &lt;em&gt;GeoGebra&lt;/em&gt;
some time ago may also be of your interest.&lt;/p&gt;</content><category term="Blog"></category><category term="math"></category><category term="R"></category></entry><entry><title>The spectrum of my personal accountancy</title><link href="https://pabrod.github.io/spectrum-accountancy-en.html" rel="alternate"></link><published>2018-11-28T13:54:29+01:00</published><updated>2018-11-28T13:54:29+01:00</updated><author><name>Pablo Rodríguez-Sánchez</name></author><id>tag:pabrod.github.io,2018-11-28:/spectrum-accountancy-en.html</id><summary type="html">&lt;p&gt;Application of Fourier analysis to a personal accountancy timeseries&lt;/p&gt;</summary><content type="html">&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async&gt;&lt;/script&gt;

&lt;p&gt;Since year 2012, I keep and maintain a &lt;em&gt;.csv&lt;/em&gt; file containing
information about my bank accounts. The most relevant data is the time
series of the total amount of money vs. date. The table below shows a
small subset of this data:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th align="left"&gt;Date&lt;/th&gt;
&lt;th align="right"&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;2012-09-26&lt;/td&gt;
&lt;td align="right"&gt;641.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;2012-09-24&lt;/td&gt;
&lt;td align="right"&gt;703.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;2012-09-22&lt;/td&gt;
&lt;td align="right"&gt;723.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;2012-09-19&lt;/td&gt;
&lt;td align="right"&gt;755.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;2012-09-18&lt;/td&gt;
&lt;td align="right"&gt;765.52&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;When plotted, the data looks as noisy as the example on the figure below. The most noticeable regularity is the periodic increment at the end of each month, corresponding with the &lt;strong&gt;pay day&lt;/strong&gt;... followed by a big expenditure corresponding to paying the &lt;strong&gt;rent&lt;/strong&gt;. Notice also the higher pay in late June, corresponding to the summer extra salary that is customarily applied in several countries. The timeseries looks irregular, but there is some clear periodical component on it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="a" src="images/2018-11/Plot-data-1.png"&gt;&lt;/p&gt;
&lt;p&gt;I know that the Fourier transform of a continuous timeseries is the perfect tool for spotting underlying periodicities. But my timeseries is uneven and discontinous. How can we fix this?&lt;/p&gt;
&lt;h2&gt;First step: Interpolation&lt;/h2&gt;
&lt;p&gt;The first problem, unevenness of data, can be solved by good old interpolation methods. The only tricky part here is that our &lt;em&gt;x&lt;/em&gt; coordinates are dates, so it is advisable to use &lt;em&gt;lubridate&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I used the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dplyr&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;library&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;lubridate&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;first_day&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;min&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="mh"&gt;$Da&lt;/span&gt;&lt;span class="nv"&gt;te&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;last_day&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;max&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="mh"&gt;$Da&lt;/span&gt;&lt;span class="nv"&gt;te&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

# &lt;span class="nv"&gt;Add&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;column&lt;/span&gt; &lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;relative&lt;/span&gt; &lt;span class="nv"&gt;day&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;an&lt;/span&gt; &lt;span class="nv"&gt;integer&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;mutate&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;, &lt;span class="nv"&gt;Day_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt;.&lt;span class="nv"&gt;numeric&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="mh"&gt;$Da&lt;/span&gt;&lt;span class="nv"&gt;te&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;first_day&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;

# &lt;span class="nv"&gt;Create&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;time&lt;/span&gt; &lt;span class="nv"&gt;vector&lt;/span&gt; &lt;span class="nv"&gt;used&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;interpolation&lt;/span&gt;
&lt;span class="nv"&gt;all_days&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;first_day&lt;/span&gt;, &lt;span class="nv"&gt;last_day&lt;/span&gt;, &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;all_indices&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;all_days&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;daily_total&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;approx&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="mh"&gt;$Da&lt;/span&gt;&lt;span class="nv"&gt;y_index&lt;/span&gt;, &lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;$&lt;span class="nv"&gt;Total&lt;/span&gt;, &lt;span class="nv"&gt;xout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;all_indices&lt;/span&gt;, &lt;span class="nv"&gt;yright&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;head&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;$&lt;span class="nv"&gt;Total&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Second step: Fourier transform&lt;/h2&gt;
&lt;p&gt;For discrete, evenly spaced timeseries as the one we have after interpolation, fast Fourier transform can be used to estimate dominant frequencies. The fast Fourier transform or &lt;em&gt;FFT&lt;/em&gt; is defined as a function of an integer parameter &lt;em&gt;k&lt;/em&gt; and a set of &lt;em&gt;N&lt;/em&gt; complex numbers {&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;0&lt;/sub&gt;, &lt;em&gt;x&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt;, ...&lt;em&gt;x&lt;/em&gt;&lt;sub&gt;&lt;em&gt;N&lt;/em&gt; − 1&lt;/sub&gt;}.&lt;/p&gt;
&lt;p&gt;The definition goes as follows:&lt;/p&gt;
&lt;p&gt;$$
X_k = FFT [ k; \lbrace x_n \rbrace] \equiv  \sum_{n=0}^{N-1} x_n\cdot e^{-i 2 \pi k \frac{n}{N}}
$$&lt;/p&gt;
&lt;p&gt;and the inverse:&lt;/p&gt;
&lt;p&gt;$$
x_n = FFT^{-1} [ n; \lbrace X_k \rbrace] \equiv  \frac{1}{N}\sum_{k=0}^{N-1} X_k \cdot  e^{i 2 \pi k \frac{n}{N}}
$$&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;FFT&lt;/em&gt; can be used to estimate the spectrum of a signal. While doing this, it is important to note that &lt;em&gt;n&lt;/em&gt; and &lt;em&gt;k&lt;/em&gt; are unit-less vector indices. In order to link those indices with physical quantities as time and frequency, we could notice that:&lt;/p&gt;
&lt;p&gt;$$
x_n = x(n \cdot \Delta t) \equiv x(t_n)
$$&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;Δ&lt;/em&gt;&lt;em&gt;t&lt;/em&gt; is the sampling period. If we take a number &lt;em&gt;N&lt;/em&gt; of samples, the final sample time should be:&lt;/p&gt;
&lt;p&gt;$$
t_{end} = N \cdot \Delta t \equiv t_N
$$&lt;/p&gt;
&lt;p&gt;Going to our first equation with all this in mind, we have:&lt;/p&gt;
&lt;p&gt;$$
X_k \equiv \\
\sum_{n=0}^{N-1} x_n \cdot e^{-i 2 \pi k \frac{n}{N}} = \\
\sum_{n=0}^{N-1} x(n \cdot \Delta t) \cdot e^{-i 2 \pi k \frac{n \cdot \Delta t}{t_{end}}} = \\
\sum_{t_n=0}^{t_{end}-\Delta t} x(t_n) \cdot e^{-i 2 \pi k \frac{t_n}{t_{end}}} = \\
\sum_{t_n=0}^{t_{end}-\Delta t} x(t_n) \cdot e^{-i \frac{2 \pi k}{t_{end}} t_n} = \\
\sum_{t_n=0}^{t_{end}-\Delta t} x(t_n) \cdot e^{-i \omega_k t_n}
$$&lt;/p&gt;
&lt;p&gt;so, the link between the indices &lt;em&gt;k&lt;/em&gt; and the corresponding physical frequencies &lt;em&gt;ω&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; is given by:&lt;/p&gt;
&lt;p&gt;$$
\omega_k = \frac{2 \pi}{t_{end}} k
$$&lt;/p&gt;
&lt;p&gt;We just added units (and thus, physical) significance to the indexes &lt;em&gt;k&lt;/em&gt; and &lt;em&gt;n&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;The (quite primitive) code I used for doing this is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nv"&gt;fft_spectrum&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;function&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ts&lt;/span&gt;, &lt;span class="nv"&gt;ys&lt;/span&gt;, &lt;span class="nv"&gt;as&lt;/span&gt;.&lt;span class="nv"&gt;freq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;TRUE&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
      # &lt;span class="nv"&gt;Translate&lt;/span&gt; &lt;span class="nv"&gt;k&lt;/span&gt; &lt;span class="nv"&gt;indices&lt;/span&gt; &lt;span class="nv"&gt;into&lt;/span&gt; &lt;span class="nv"&gt;frequencies&lt;/span&gt;
      &lt;span class="nv"&gt;tEnd&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;tail&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ts&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ys&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;tEnd&lt;/span&gt; # &lt;span class="nv"&gt;In&lt;/span&gt; &lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="o"&gt;^-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;units&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;typically&lt;/span&gt; &lt;span class="nv"&gt;Hz&lt;/span&gt;, &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;time&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;seconds&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

      #&lt;span class="nv"&gt;Perform&lt;/span&gt; &lt;span class="nv"&gt;fast&lt;/span&gt; &lt;span class="nv"&gt;Fourier&lt;/span&gt; &lt;span class="nv"&gt;transform&lt;/span&gt;
      &lt;span class="nv"&gt;Xk&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;Mod&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fft&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ys&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;as&lt;/span&gt;.&lt;span class="nv"&gt;freq&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; { # &lt;span class="nv"&gt;Use&lt;/span&gt; &lt;span class="nv"&gt;frequencies&lt;/span&gt;
        &lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;fs&lt;/span&gt;, &lt;span class="nv"&gt;Xk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Xk&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
      } &lt;span class="k"&gt;else&lt;/span&gt; { # &lt;span class="nv"&gt;Use&lt;/span&gt; &lt;span class="nv"&gt;periods&lt;/span&gt;
        &lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;fs&lt;/span&gt;, &lt;span class="nv"&gt;Xk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Xk&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
      }
    }
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;After applying the two algorithms described above I find the following distribution of the relative lengths of each period:&lt;/p&gt;
&lt;p&gt;&lt;img alt="b" src="images/2018-11/Frequencies-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Note that the strengths corresponding to periods of &lt;em&gt;30&lt;/em&gt; and &lt;em&gt;31&lt;/em&gt; days are higher than their neighbors, corresponding to pay-days and monthly payments. Even my very basic algorithm could see it!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PS: I removed several details, plus trimmed both vertical and horizontal scales. I did this in order to keep my privacy. After all, the FFT is an invertible operation!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This entry appears in &lt;a href="https://www.r-bloggers.com"&gt;R-bloggers.com&lt;/a&gt; &lt;/p&gt;</content><category term="Blog"></category><category term="math"></category><category term="R"></category></entry><entry><title>Things I've learned working in a multidisciplinary group</title><link href="https://pabrod.github.io/multidisciplinary-en.html" rel="alternate"></link><published>2018-06-12T16:04:02+02:00</published><updated>2018-06-12T16:04:02+02:00</updated><author><name>Pablo Rodríguez-Sánchez</name></author><id>tag:pabrod.github.io,2018-06-12:/multidisciplinary-en.html</id><summary type="html">&lt;p&gt;I work as a mathematician in an... aquatic ecology department!&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;This is a translation of the essay "Cosas que he aprendido trabajando en un grupo multidisciplinar", originally published &lt;a href="http://fuga.naukas.com/2018/06/12/grupo-multidisciplinar"&gt;here&lt;/a&gt; in Spanish.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As some of you already know, I'm a physicist. Despite that, I work as a mathematician in an... aquatic ecology department! This situation, apart from creating an identity crisis on me, makes me spend quite some time thinking about the diffuse and popular concept of "multidisciplinarity".&lt;/p&gt;
&lt;p&gt;The underlying idea behind multidisciplinarity is that it is not possible to bundle knowledge in fixed categories, mostly motivated by academical tradition. The borders between disciplines are diffuse. Two clear examples: no one can trace a solid line between physics and mathematics (where does mechanics end and analysis starts?), nor between physics and chemistry (is molecular structure chemistry or quantum mechanics?). An ideal multidisciplinary team contains experts from different fields, increasing thus the reach of the problems that can be addressed. In this kind of teams, some events of "epiphany", called "knowledge transfer" in this context, to happen. In those moments the whole group learns and adopts a new idea or method from another discipline.&lt;/p&gt;
&lt;p&gt;The idea sounds good, but the practical implementation has some difficulties worth mentioning. To begin with, this groups usually are created inside traditional departments. This makes one of the disciplines to be over-represented (in my case, biology), and this creates some inertia. Some people tell the joke that a multidisciplinary team is a traditional department that once hired a physicist for helping with the simulations.&lt;/p&gt;
&lt;p&gt;One may think (at least I did) that the bigger difficulty in order to adapt to a multidisciplinary group would be acquiring the required knowledge from the other disciplines. Curiously, my experience has been that this difficulty is secondary: precisely because being inside a multidisciplinary team, there's always some expert close who can help. Then, that is the main difficulty? No doubt: &lt;strong&gt;communication&lt;/strong&gt;, and on a very deep level. Different disciplines use not only different technical jargon (this is the less important problem), but also different tools and, more seriously, they have different academical cultures.&lt;/p&gt;
&lt;p&gt;And academical cultures are a more serious difficulty than it may seem. Nowadays, I can identify a physicist, engineer or mathematician just looking at his face when I say: &lt;em&gt;"I am the only one using LaTeX in my department"&lt;/em&gt;. These small details affect the way papers are written, and even the way problems are solved (and even posed!). In the next lines we'll see some examples.&lt;/p&gt;
&lt;p&gt;In my everyday life I collaborate with biologists and mathematicians in the posing, analysis and solving of mathematical models with biological interest. In both groups I've observed ways of working that I personally like... and some others that I like less.&lt;/p&gt;
&lt;p&gt;Among mathematicians, I find remarkable the exquisite care they put in notation, and their detail in the problem-posing phase. On the other hand, they tend to be reluctant to apply numerical methods, even when there is no other choice.&lt;/p&gt;
&lt;p&gt;About biologists, it is remarkable that they are never afraid of tackling any problem, regardless of how complex it is. They don't hesitate in using all the numerical artillery as soon as it is possible. To the contrary of mathematicians, they tend to pose the problems in a blurrier way and add more specifications on-the-go. Maybe what I like the less is that some biology journals follow strictly the rule &lt;em&gt;"each printed equation halves the number of readers"&lt;/em&gt;, and they rather write lengthy paragraphs than a single equation containing the same information (if you're lucky, maybe you can find the equation in the appendix).&lt;/p&gt;
&lt;p&gt;I'm pretty sure that some of the physicists' characteristics are strange for them. In fact, it is symptomatic that, from my point of view, mathematicians and biologists lie on both the extremes of a continuum (rigour vs. quick problem solving), in which center curiously and suspiciously lies physics.&lt;/p&gt;
&lt;p&gt;We should not forget that research groups are also human groups, with vices, virtues, interests, etc. In a multidisciplinary group, communication has to be fluid not only in the sense of information transfer but also in the sense of empathetic communication. Not only to understand other people motivations to do things "their way" (you can like it more or less, but there's always a motivation), but also to make the &lt;em&gt;"knowledge transfer"&lt;/em&gt; deserve its name, and not be a mere &lt;em&gt;"I can do it better"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Maybe, the best abstract of the situation is that, after more than two years working in a multidisciplinary group, I still cannot decide if I love it or hate it. Anyway, I dare to leave here some advice, just in case someone finds it interesting:&lt;/p&gt;
&lt;h2&gt;Understand their methods&lt;/h2&gt;
&lt;p&gt;The first reaction when we face an unusual method tends to be rejection (look, for instance, the scholarly fights about notations for derivative (I wrote about this &lt;a href="http://fuga.naukas.com/2016/03/10/derivadas-con-primas-o-diferenciales/"&gt;here&lt;/a&gt;, in Spanish). My experience is that, even if at the end we decide that "our" method is better suited for the given problem, it is worth to stop and understand the motivations for using something different.&lt;/p&gt;
&lt;h2&gt;Explain your methods&lt;/h2&gt;
&lt;p&gt;Practical example: most people in my department, including my supervisors, use &lt;em&gt;Word&lt;/em&gt;, but I use &lt;em&gt;LaTeX&lt;/em&gt;. At the beginning of my project, I explained to them my reasons for doing so, and we reached minimum agreement about how to collaborate without forcing them to learn how to use  &lt;em&gt;LaTeX&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Learn your own way&lt;/h2&gt;
&lt;p&gt;It is very likely that the sources your colleagues use are not the ideal for you. In the case of mathematical biology, there are books and journals more or less bent towards biological or mathematical styles. When it comes to learning new ideas, I try to use the more mathematical ones. There's no need of not using the expertise you gained during your degree studies. When it comes to publishing, once again, an agreement should be required with your collaborators about the style and the target journal.&lt;/p&gt;
&lt;h2&gt;Make a reasonable partition of your schedule&lt;/h2&gt;
&lt;p&gt;Multidisciplinary groups are rarely evenly composed. Practical example: if you are the only statistician in a medicine department with physicians, chemists and biologists, it is very likely that everyone is interested in your help. Probably, to the contrary, only a couple of other people's projects will be meaningful for your research. This situation may escalate into a problem if you don't establish some reasonable limits for the time you spend helping others.&lt;/p&gt;
&lt;h2&gt;In the end, your thesis is yours&lt;/h2&gt;
&lt;p&gt;To be part of a multidisciplinary group doesn't mean to completely abandon your interests and previous training. At the end, you are the responsible of your publications. Your directors, so to say, occupy the co-pilot seat.&lt;/p&gt;
&lt;h2&gt;Don't apologize for being a physicist, a biologist, ...&lt;/h2&gt;
&lt;p&gt;If your discipline represents a minority inside the group or, even worse, if you are the only representative of it, you may feel that it is not worth giving your opinion. This is a mistake. It is exactly in these situations when you feel you have to say something that nobody before said, when it is most likely that something significant is communicated.&lt;/p&gt;
&lt;p&gt;After all, this why they hired you. Didn't they?&lt;/p&gt;</content><category term="Blog"></category><category term="math"></category><category term="biology"></category></entry><entry><title>Course announcement: Introduction to PDEs</title><link href="https://pabrod.github.io/intro-to-pdes-en.html" rel="alternate"></link><published>2018-06-06T13:13:30+02:00</published><updated>2018-06-06T13:13:30+02:00</updated><author><name>Pablo Rodríguez-Sánchez</name></author><id>tag:pabrod.github.io,2018-06-06:/intro-to-pdes-en.html</id><summary type="html">&lt;p&gt;Quick introduction to Partial Differential Equations, 7 June 2018, Wageningen University&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Quick introduction to Partial Differential Equations&lt;/h2&gt;
&lt;p&gt;On Thursday 7th, I'll give a crash course on partial differential equations at Wageningen University. Due to the diversity of backgrounds of the attendants, I'll try to focus in the key concepts, using graphical approaches as much as I can. Later on, we'll move forward to the numerical approach.&lt;/p&gt;
&lt;h2&gt;Outline&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;What's the difference between partial and ordinary differential equations?&lt;/li&gt;
&lt;li&gt;Vector calculus in a nutshell&lt;/li&gt;
&lt;li&gt;Classical PDEs&lt;/li&gt;
&lt;li&gt;Classical boundary conditions&lt;/li&gt;
&lt;li&gt;Hand-on examples with &lt;em&gt;Matlab&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Please bring your laptop. The numerical examples will be solved using &lt;em&gt;Matlab's PDE Toolbox&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Materials&lt;/h2&gt;
&lt;p&gt;The slides and some code examples are available at &lt;a href="https://github.com/PabRod/intro-to-pdes"&gt;this link&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Spacetime coordinates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;7 June 2018, 13:30-16:30.&lt;/li&gt;
&lt;li&gt;Room E.111, Lumen.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="math"></category><category term="teaching"></category></entry></feed>